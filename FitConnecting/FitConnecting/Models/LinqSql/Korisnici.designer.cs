#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DomaciZadatak.Models.LinqSql
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Teretana")]
	public partial class KorisniciDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAktivnost(Aktivnost instance);
    partial void UpdateAktivnost(Aktivnost instance);
    partial void DeleteAktivnost(Aktivnost instance);
    partial void InsertIndividualna(Individualna instance);
    partial void UpdateIndividualna(Individualna instance);
    partial void DeleteIndividualna(Individualna instance);
    partial void InsertGrupna(Grupna instance);
    partial void UpdateGrupna(Grupna instance);
    partial void DeleteGrupna(Grupna instance);
    partial void InsertKalendar(Kalendar instance);
    partial void UpdateKalendar(Kalendar instance);
    partial void DeleteKalendar(Kalendar instance);
    partial void InsertKorisnik(Korisnik instance);
    partial void UpdateKorisnik(Korisnik instance);
    partial void DeleteKorisnik(Korisnik instance);
    partial void InsertRecepcionar(Recepcionar instance);
    partial void UpdateRecepcionar(Recepcionar instance);
    partial void DeleteRecepcionar(Recepcionar instance);
    partial void InsertRezervisan_Termin(Rezervisan_Termin instance);
    partial void UpdateRezervisan_Termin(Rezervisan_Termin instance);
    partial void DeleteRezervisan_Termin(Rezervisan_Termin instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertSala(Sala instance);
    partial void UpdateSala(Sala instance);
    partial void DeleteSala(Sala instance);
    partial void InsertSistemski_Administrator(Sistemski_Administrator instance);
    partial void UpdateSistemski_Administrator(Sistemski_Administrator instance);
    partial void DeleteSistemski_Administrator(Sistemski_Administrator instance);
    partial void InsertTrener(Trener instance);
    partial void UpdateTrener(Trener instance);
    partial void DeleteTrener(Trener instance);
    partial void InsertUplata(Uplata instance);
    partial void UpdateUplata(Uplata instance);
    partial void DeleteUplata(Uplata instance);
    partial void InsertUserRole(UserRole instance);
    partial void UpdateUserRole(UserRole instance);
    partial void DeleteUserRole(UserRole instance);
    partial void InsertZahtevOprema(ZahtevOprema instance);
    partial void UpdateZahtevOprema(ZahtevOprema instance);
    partial void DeleteZahtevOprema(ZahtevOprema instance);
    partial void InsertZaposleni(Zaposleni instance);
    partial void UpdateZaposleni(Zaposleni instance);
    partial void DeleteZaposleni(Zaposleni instance);
    #endregion
		
		public KorisniciDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["TeretanaConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public KorisniciDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KorisniciDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KorisniciDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KorisniciDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Aktivnost> Aktivnosts
		{
			get
			{
				return this.GetTable<Aktivnost>();
			}
		}
		
		public System.Data.Linq.Table<Individualna> Individualnas
		{
			get
			{
				return this.GetTable<Individualna>();
			}
		}
		
		public System.Data.Linq.Table<Grupna> Grupnas
		{
			get
			{
				return this.GetTable<Grupna>();
			}
		}
		
		public System.Data.Linq.Table<Kalendar> Kalendars
		{
			get
			{
				return this.GetTable<Kalendar>();
			}
		}
		
		public System.Data.Linq.Table<Korisnik> Korisniks
		{
			get
			{
				return this.GetTable<Korisnik>();
			}
		}
		
		public System.Data.Linq.Table<Recepcionar> Recepcionars
		{
			get
			{
				return this.GetTable<Recepcionar>();
			}
		}
		
		public System.Data.Linq.Table<Rezervisan_Termin> Rezervisan_Termins
		{
			get
			{
				return this.GetTable<Rezervisan_Termin>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<Sala> Salas
		{
			get
			{
				return this.GetTable<Sala>();
			}
		}
		
		public System.Data.Linq.Table<Sistemski_Administrator> Sistemski_Administrators
		{
			get
			{
				return this.GetTable<Sistemski_Administrator>();
			}
		}
		
		public System.Data.Linq.Table<Trener> Treners
		{
			get
			{
				return this.GetTable<Trener>();
			}
		}
		
		public System.Data.Linq.Table<Uplata> Uplatas
		{
			get
			{
				return this.GetTable<Uplata>();
			}
		}
		
		public System.Data.Linq.Table<UserRole> UserRoles
		{
			get
			{
				return this.GetTable<UserRole>();
			}
		}
		
		public System.Data.Linq.Table<ZahtevOprema> ZahtevOpremas
		{
			get
			{
				return this.GetTable<ZahtevOprema>();
			}
		}
		
		public System.Data.Linq.Table<Zaposleni> Zaposlenis
		{
			get
			{
				return this.GetTable<Zaposleni>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Aktivnost")]
	public partial class Aktivnost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AktivnostID;
		
		private string _Naziv;
		
		private int _Cena;
		
		private EntityRef<Individualna> _Individualna;
		
		private EntityRef<Grupna> _Grupna;
		
		private EntitySet<Uplata> _Uplatas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAktivnostIDChanging(int value);
    partial void OnAktivnostIDChanged();
    partial void OnNazivChanging(string value);
    partial void OnNazivChanged();
    partial void OnCenaChanging(int value);
    partial void OnCenaChanged();
    #endregion
		
		public Aktivnost()
		{
			this._Individualna = default(EntityRef<Individualna>);
			this._Grupna = default(EntityRef<Grupna>);
			this._Uplatas = new EntitySet<Uplata>(new Action<Uplata>(this.attach_Uplatas), new Action<Uplata>(this.detach_Uplatas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AktivnostID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AktivnostID
		{
			get
			{
				return this._AktivnostID;
			}
			set
			{
				if ((this._AktivnostID != value))
				{
					this.OnAktivnostIDChanging(value);
					this.SendPropertyChanging();
					this._AktivnostID = value;
					this.SendPropertyChanged("AktivnostID");
					this.OnAktivnostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naziv", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Naziv
		{
			get
			{
				return this._Naziv;
			}
			set
			{
				if ((this._Naziv != value))
				{
					this.OnNazivChanging(value);
					this.SendPropertyChanging();
					this._Naziv = value;
					this.SendPropertyChanged("Naziv");
					this.OnNazivChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cena", DbType="Int NOT NULL")]
		public int Cena
		{
			get
			{
				return this._Cena;
			}
			set
			{
				if ((this._Cena != value))
				{
					this.OnCenaChanging(value);
					this.SendPropertyChanging();
					this._Cena = value;
					this.SendPropertyChanged("Cena");
					this.OnCenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aktivnost_Individualna", Storage="_Individualna", ThisKey="AktivnostID", OtherKey="AktivnostID", IsUnique=true, IsForeignKey=false)]
		public Individualna Individualna
		{
			get
			{
				return this._Individualna.Entity;
			}
			set
			{
				Individualna previousValue = this._Individualna.Entity;
				if (((previousValue != value) 
							|| (this._Individualna.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Individualna.Entity = null;
						previousValue.Aktivnost = null;
					}
					this._Individualna.Entity = value;
					if ((value != null))
					{
						value.Aktivnost = this;
					}
					this.SendPropertyChanged("Individualna");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aktivnost_Grupna", Storage="_Grupna", ThisKey="AktivnostID", OtherKey="AktivnostID", IsUnique=true, IsForeignKey=false)]
		public Grupna Grupna
		{
			get
			{
				return this._Grupna.Entity;
			}
			set
			{
				Grupna previousValue = this._Grupna.Entity;
				if (((previousValue != value) 
							|| (this._Grupna.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grupna.Entity = null;
						previousValue.Aktivnost = null;
					}
					this._Grupna.Entity = value;
					if ((value != null))
					{
						value.Aktivnost = this;
					}
					this.SendPropertyChanged("Grupna");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aktivnost_Uplata", Storage="_Uplatas", ThisKey="AktivnostID", OtherKey="AktivnostID")]
		public EntitySet<Uplata> Uplatas
		{
			get
			{
				return this._Uplatas;
			}
			set
			{
				this._Uplatas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Uplatas(Uplata entity)
		{
			this.SendPropertyChanging();
			entity.Aktivnost = this;
		}
		
		private void detach_Uplatas(Uplata entity)
		{
			this.SendPropertyChanging();
			entity.Aktivnost = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Individualna")]
	public partial class Individualna : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AktivnostID;
		
		private EntityRef<Aktivnost> _Aktivnost;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAktivnostIDChanging(int value);
    partial void OnAktivnostIDChanged();
    #endregion
		
		public Individualna()
		{
			this._Aktivnost = default(EntityRef<Aktivnost>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AktivnostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AktivnostID
		{
			get
			{
				return this._AktivnostID;
			}
			set
			{
				if ((this._AktivnostID != value))
				{
					if (this._Aktivnost.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAktivnostIDChanging(value);
					this.SendPropertyChanging();
					this._AktivnostID = value;
					this.SendPropertyChanged("AktivnostID");
					this.OnAktivnostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aktivnost_Individualna", Storage="_Aktivnost", ThisKey="AktivnostID", OtherKey="AktivnostID", IsForeignKey=true)]
		public Aktivnost Aktivnost
		{
			get
			{
				return this._Aktivnost.Entity;
			}
			set
			{
				Aktivnost previousValue = this._Aktivnost.Entity;
				if (((previousValue != value) 
							|| (this._Aktivnost.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aktivnost.Entity = null;
						previousValue.Individualna = null;
					}
					this._Aktivnost.Entity = value;
					if ((value != null))
					{
						value.Individualna = this;
						this._AktivnostID = value.AktivnostID;
					}
					else
					{
						this._AktivnostID = default(int);
					}
					this.SendPropertyChanged("Aktivnost");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Grupna")]
	public partial class Grupna : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AktivnostID;
		
		private EntityRef<Aktivnost> _Aktivnost;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAktivnostIDChanging(int value);
    partial void OnAktivnostIDChanged();
    #endregion
		
		public Grupna()
		{
			this._Aktivnost = default(EntityRef<Aktivnost>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AktivnostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AktivnostID
		{
			get
			{
				return this._AktivnostID;
			}
			set
			{
				if ((this._AktivnostID != value))
				{
					if (this._Aktivnost.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAktivnostIDChanging(value);
					this.SendPropertyChanging();
					this._AktivnostID = value;
					this.SendPropertyChanged("AktivnostID");
					this.OnAktivnostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aktivnost_Grupna", Storage="_Aktivnost", ThisKey="AktivnostID", OtherKey="AktivnostID", IsForeignKey=true)]
		public Aktivnost Aktivnost
		{
			get
			{
				return this._Aktivnost.Entity;
			}
			set
			{
				Aktivnost previousValue = this._Aktivnost.Entity;
				if (((previousValue != value) 
							|| (this._Aktivnost.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aktivnost.Entity = null;
						previousValue.Grupna = null;
					}
					this._Aktivnost.Entity = value;
					if ((value != null))
					{
						value.Grupna = this;
						this._AktivnostID = value.AktivnostID;
					}
					else
					{
						this._AktivnostID = default(int);
					}
					this.SendPropertyChanged("Aktivnost");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kalendar")]
	public partial class Kalendar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _JMBG;
		
		private int _TerminID;
		
		private EntityRef<Korisnik> _Korisnik;
		
		private EntityRef<Rezervisan_Termin> _Rezervisan_Termin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJMBGChanging(long value);
    partial void OnJMBGChanged();
    partial void OnTerminIDChanging(int value);
    partial void OnTerminIDChanged();
    #endregion
		
		public Kalendar()
		{
			this._Korisnik = default(EntityRef<Korisnik>);
			this._Rezervisan_Termin = default(EntityRef<Rezervisan_Termin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JMBG", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long JMBG
		{
			get
			{
				return this._JMBG;
			}
			set
			{
				if ((this._JMBG != value))
				{
					if (this._Korisnik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJMBGChanging(value);
					this.SendPropertyChanging();
					this._JMBG = value;
					this.SendPropertyChanged("JMBG");
					this.OnJMBGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerminID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TerminID
		{
			get
			{
				return this._TerminID;
			}
			set
			{
				if ((this._TerminID != value))
				{
					if (this._Rezervisan_Termin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTerminIDChanging(value);
					this.SendPropertyChanging();
					this._TerminID = value;
					this.SendPropertyChanged("TerminID");
					this.OnTerminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Korisnik_Kalendar", Storage="_Korisnik", ThisKey="JMBG", OtherKey="JMBG", IsForeignKey=true)]
		public Korisnik Korisnik
		{
			get
			{
				return this._Korisnik.Entity;
			}
			set
			{
				Korisnik previousValue = this._Korisnik.Entity;
				if (((previousValue != value) 
							|| (this._Korisnik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Korisnik.Entity = null;
						previousValue.Kalendars.Remove(this);
					}
					this._Korisnik.Entity = value;
					if ((value != null))
					{
						value.Kalendars.Add(this);
						this._JMBG = value.JMBG;
					}
					else
					{
						this._JMBG = default(long);
					}
					this.SendPropertyChanged("Korisnik");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rezervisan_Termin_Kalendar", Storage="_Rezervisan_Termin", ThisKey="TerminID", OtherKey="TerminID", IsForeignKey=true)]
		public Rezervisan_Termin Rezervisan_Termin
		{
			get
			{
				return this._Rezervisan_Termin.Entity;
			}
			set
			{
				Rezervisan_Termin previousValue = this._Rezervisan_Termin.Entity;
				if (((previousValue != value) 
							|| (this._Rezervisan_Termin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rezervisan_Termin.Entity = null;
						previousValue.Kalendars.Remove(this);
					}
					this._Rezervisan_Termin.Entity = value;
					if ((value != null))
					{
						value.Kalendars.Add(this);
						this._TerminID = value.TerminID;
					}
					else
					{
						this._TerminID = default(int);
					}
					this.SendPropertyChanged("Rezervisan_Termin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Korisnik")]
	public partial class Korisnik : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _JMBG;
		
		private string _Ime;
		
		private string _Prezime;
		
		private System.Nullable<System.DateTime> _DatumRodj;
		
		private string _Email;
		
		private string _Lozinka;
		
		private EntitySet<Kalendar> _Kalendars;
		
		private EntitySet<Rezervisan_Termin> _Rezervisan_Termins;
		
		private EntitySet<Uplata> _Uplatas;
		
		private EntitySet<UserRole> _UserRoles;
		
		private EntitySet<ZahtevOprema> _ZahtevOpremas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJMBGChanging(long value);
    partial void OnJMBGChanged();
    partial void OnImeChanging(string value);
    partial void OnImeChanged();
    partial void OnPrezimeChanging(string value);
    partial void OnPrezimeChanged();
    partial void OnDatumRodjChanging(System.Nullable<System.DateTime> value);
    partial void OnDatumRodjChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLozinkaChanging(string value);
    partial void OnLozinkaChanged();
    #endregion
		
		public Korisnik()
		{
			this._Kalendars = new EntitySet<Kalendar>(new Action<Kalendar>(this.attach_Kalendars), new Action<Kalendar>(this.detach_Kalendars));
			this._Rezervisan_Termins = new EntitySet<Rezervisan_Termin>(new Action<Rezervisan_Termin>(this.attach_Rezervisan_Termins), new Action<Rezervisan_Termin>(this.detach_Rezervisan_Termins));
			this._Uplatas = new EntitySet<Uplata>(new Action<Uplata>(this.attach_Uplatas), new Action<Uplata>(this.detach_Uplatas));
			this._UserRoles = new EntitySet<UserRole>(new Action<UserRole>(this.attach_UserRoles), new Action<UserRole>(this.detach_UserRoles));
			this._ZahtevOpremas = new EntitySet<ZahtevOprema>(new Action<ZahtevOprema>(this.attach_ZahtevOpremas), new Action<ZahtevOprema>(this.detach_ZahtevOpremas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JMBG", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long JMBG
		{
			get
			{
				return this._JMBG;
			}
			set
			{
				if ((this._JMBG != value))
				{
					this.OnJMBGChanging(value);
					this.SendPropertyChanging();
					this._JMBG = value;
					this.SendPropertyChanged("JMBG");
					this.OnJMBGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ime", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ime
		{
			get
			{
				return this._Ime;
			}
			set
			{
				if ((this._Ime != value))
				{
					this.OnImeChanging(value);
					this.SendPropertyChanging();
					this._Ime = value;
					this.SendPropertyChanged("Ime");
					this.OnImeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prezime", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Prezime
		{
			get
			{
				return this._Prezime;
			}
			set
			{
				if ((this._Prezime != value))
				{
					this.OnPrezimeChanging(value);
					this.SendPropertyChanging();
					this._Prezime = value;
					this.SendPropertyChanged("Prezime");
					this.OnPrezimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatumRodj", DbType="Date")]
		public System.Nullable<System.DateTime> DatumRodj
		{
			get
			{
				return this._DatumRodj;
			}
			set
			{
				if ((this._DatumRodj != value))
				{
					this.OnDatumRodjChanging(value);
					this.SendPropertyChanging();
					this._DatumRodj = value;
					this.SendPropertyChanged("DatumRodj");
					this.OnDatumRodjChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lozinka", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Lozinka
		{
			get
			{
				return this._Lozinka;
			}
			set
			{
				if ((this._Lozinka != value))
				{
					this.OnLozinkaChanging(value);
					this.SendPropertyChanging();
					this._Lozinka = value;
					this.SendPropertyChanged("Lozinka");
					this.OnLozinkaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Korisnik_Kalendar", Storage="_Kalendars", ThisKey="JMBG", OtherKey="JMBG")]
		public EntitySet<Kalendar> Kalendars
		{
			get
			{
				return this._Kalendars;
			}
			set
			{
				this._Kalendars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Korisnik_Rezervisan_Termin", Storage="_Rezervisan_Termins", ThisKey="JMBG", OtherKey="JMBG")]
		public EntitySet<Rezervisan_Termin> Rezervisan_Termins
		{
			get
			{
				return this._Rezervisan_Termins;
			}
			set
			{
				this._Rezervisan_Termins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Korisnik_Uplata", Storage="_Uplatas", ThisKey="JMBG", OtherKey="JMBG")]
		public EntitySet<Uplata> Uplatas
		{
			get
			{
				return this._Uplatas;
			}
			set
			{
				this._Uplatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Korisnik_UserRole", Storage="_UserRoles", ThisKey="JMBG", OtherKey="UserID")]
		public EntitySet<UserRole> UserRoles
		{
			get
			{
				return this._UserRoles;
			}
			set
			{
				this._UserRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Korisnik_ZahtevOprema", Storage="_ZahtevOpremas", ThisKey="JMBG", OtherKey="JMBG")]
		public EntitySet<ZahtevOprema> ZahtevOpremas
		{
			get
			{
				return this._ZahtevOpremas;
			}
			set
			{
				this._ZahtevOpremas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Kalendars(Kalendar entity)
		{
			this.SendPropertyChanging();
			entity.Korisnik = this;
		}
		
		private void detach_Kalendars(Kalendar entity)
		{
			this.SendPropertyChanging();
			entity.Korisnik = null;
		}
		
		private void attach_Rezervisan_Termins(Rezervisan_Termin entity)
		{
			this.SendPropertyChanging();
			entity.Korisnik = this;
		}
		
		private void detach_Rezervisan_Termins(Rezervisan_Termin entity)
		{
			this.SendPropertyChanging();
			entity.Korisnik = null;
		}
		
		private void attach_Uplatas(Uplata entity)
		{
			this.SendPropertyChanging();
			entity.Korisnik = this;
		}
		
		private void detach_Uplatas(Uplata entity)
		{
			this.SendPropertyChanging();
			entity.Korisnik = null;
		}
		
		private void attach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.Korisnik = this;
		}
		
		private void detach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.Korisnik = null;
		}
		
		private void attach_ZahtevOpremas(ZahtevOprema entity)
		{
			this.SendPropertyChanging();
			entity.Korisnik = this;
		}
		
		private void detach_ZahtevOpremas(ZahtevOprema entity)
		{
			this.SendPropertyChanging();
			entity.Korisnik = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Recepcionar")]
	public partial class Recepcionar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ZaposleniID;
		
		private EntityRef<Zaposleni> _Zaposleni;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnZaposleniIDChanging(int value);
    partial void OnZaposleniIDChanged();
    #endregion
		
		public Recepcionar()
		{
			this._Zaposleni = default(EntityRef<Zaposleni>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZaposleniID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ZaposleniID
		{
			get
			{
				return this._ZaposleniID;
			}
			set
			{
				if ((this._ZaposleniID != value))
				{
					if (this._Zaposleni.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnZaposleniIDChanging(value);
					this.SendPropertyChanging();
					this._ZaposleniID = value;
					this.SendPropertyChanged("ZaposleniID");
					this.OnZaposleniIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zaposleni_Recepcionar", Storage="_Zaposleni", ThisKey="ZaposleniID", OtherKey="ZaposleniID", IsForeignKey=true)]
		public Zaposleni Zaposleni
		{
			get
			{
				return this._Zaposleni.Entity;
			}
			set
			{
				Zaposleni previousValue = this._Zaposleni.Entity;
				if (((previousValue != value) 
							|| (this._Zaposleni.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Zaposleni.Entity = null;
						previousValue.Recepcionar = null;
					}
					this._Zaposleni.Entity = value;
					if ((value != null))
					{
						value.Recepcionar = this;
						this._ZaposleniID = value.ZaposleniID;
					}
					else
					{
						this._ZaposleniID = default(int);
					}
					this.SendPropertyChanged("Zaposleni");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rezervisan_Termin")]
	public partial class Rezervisan_Termin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TerminID;
		
		private int _SalaID;
		
		private System.DateTime _DatumVreme;
		
		private long _JMBG;
		
		private int _AktivnostID;
		
		private EntitySet<Kalendar> _Kalendars;
		
		private EntityRef<Korisnik> _Korisnik;
		
		private EntityRef<Sala> _Sala;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTerminIDChanging(int value);
    partial void OnTerminIDChanged();
    partial void OnSalaIDChanging(int value);
    partial void OnSalaIDChanged();
    partial void OnDatumVremeChanging(System.DateTime value);
    partial void OnDatumVremeChanged();
    partial void OnJMBGChanging(long value);
    partial void OnJMBGChanged();
    partial void OnAktivnostIDChanging(int value);
    partial void OnAktivnostIDChanged();
    #endregion
		
		public Rezervisan_Termin()
		{
			this._Kalendars = new EntitySet<Kalendar>(new Action<Kalendar>(this.attach_Kalendars), new Action<Kalendar>(this.detach_Kalendars));
			this._Korisnik = default(EntityRef<Korisnik>);
			this._Sala = default(EntityRef<Sala>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerminID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TerminID
		{
			get
			{
				return this._TerminID;
			}
			set
			{
				if ((this._TerminID != value))
				{
					this.OnTerminIDChanging(value);
					this.SendPropertyChanging();
					this._TerminID = value;
					this.SendPropertyChanged("TerminID");
					this.OnTerminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalaID", DbType="Int NOT NULL")]
		public int SalaID
		{
			get
			{
				return this._SalaID;
			}
			set
			{
				if ((this._SalaID != value))
				{
					if (this._Sala.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalaIDChanging(value);
					this.SendPropertyChanging();
					this._SalaID = value;
					this.SendPropertyChanged("SalaID");
					this.OnSalaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatumVreme", DbType="DateTime NOT NULL")]
		public System.DateTime DatumVreme
		{
			get
			{
				return this._DatumVreme;
			}
			set
			{
				if ((this._DatumVreme != value))
				{
					this.OnDatumVremeChanging(value);
					this.SendPropertyChanging();
					this._DatumVreme = value;
					this.SendPropertyChanged("DatumVreme");
					this.OnDatumVremeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JMBG", DbType="BigInt NOT NULL")]
		public long JMBG
		{
			get
			{
				return this._JMBG;
			}
			set
			{
				if ((this._JMBG != value))
				{
					if (this._Korisnik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJMBGChanging(value);
					this.SendPropertyChanging();
					this._JMBG = value;
					this.SendPropertyChanged("JMBG");
					this.OnJMBGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AktivnostID", DbType="Int NOT NULL")]
		public int AktivnostID
		{
			get
			{
				return this._AktivnostID;
			}
			set
			{
				if ((this._AktivnostID != value))
				{
					this.OnAktivnostIDChanging(value);
					this.SendPropertyChanging();
					this._AktivnostID = value;
					this.SendPropertyChanged("AktivnostID");
					this.OnAktivnostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rezervisan_Termin_Kalendar", Storage="_Kalendars", ThisKey="TerminID", OtherKey="TerminID")]
		public EntitySet<Kalendar> Kalendars
		{
			get
			{
				return this._Kalendars;
			}
			set
			{
				this._Kalendars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Korisnik_Rezervisan_Termin", Storage="_Korisnik", ThisKey="JMBG", OtherKey="JMBG", IsForeignKey=true)]
		public Korisnik Korisnik
		{
			get
			{
				return this._Korisnik.Entity;
			}
			set
			{
				Korisnik previousValue = this._Korisnik.Entity;
				if (((previousValue != value) 
							|| (this._Korisnik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Korisnik.Entity = null;
						previousValue.Rezervisan_Termins.Remove(this);
					}
					this._Korisnik.Entity = value;
					if ((value != null))
					{
						value.Rezervisan_Termins.Add(this);
						this._JMBG = value.JMBG;
					}
					else
					{
						this._JMBG = default(long);
					}
					this.SendPropertyChanged("Korisnik");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sala_Rezervisan_Termin", Storage="_Sala", ThisKey="SalaID", OtherKey="SalaID", IsForeignKey=true)]
		public Sala Sala
		{
			get
			{
				return this._Sala.Entity;
			}
			set
			{
				Sala previousValue = this._Sala.Entity;
				if (((previousValue != value) 
							|| (this._Sala.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sala.Entity = null;
						previousValue.Rezervisan_Termins.Remove(this);
					}
					this._Sala.Entity = value;
					if ((value != null))
					{
						value.Rezervisan_Termins.Add(this);
						this._SalaID = value.SalaID;
					}
					else
					{
						this._SalaID = default(int);
					}
					this.SendPropertyChanged("Sala");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Kalendars(Kalendar entity)
		{
			this.SendPropertyChanging();
			entity.Rezervisan_Termin = this;
		}
		
		private void detach_Kalendars(Kalendar entity)
		{
			this.SendPropertyChanging();
			entity.Rezervisan_Termin = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleID;
		
		private string _Naziv;
		
		private EntitySet<UserRole> _UserRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnNazivChanging(string value);
    partial void OnNazivChanged();
    #endregion
		
		public Role()
		{
			this._UserRoles = new EntitySet<UserRole>(new Action<UserRole>(this.attach_UserRoles), new Action<UserRole>(this.detach_UserRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naziv", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Naziv
		{
			get
			{
				return this._Naziv;
			}
			set
			{
				if ((this._Naziv != value))
				{
					this.OnNazivChanging(value);
					this.SendPropertyChanging();
					this._Naziv = value;
					this.SendPropertyChanged("Naziv");
					this.OnNazivChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_UserRole", Storage="_UserRoles", ThisKey="RoleID", OtherKey="RoleID")]
		public EntitySet<UserRole> UserRoles
		{
			get
			{
				return this._UserRoles;
			}
			set
			{
				this._UserRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sala")]
	public partial class Sala : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SalaID;
		
		private int _Kapacitet;
		
		private EntitySet<Rezervisan_Termin> _Rezervisan_Termins;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSalaIDChanging(int value);
    partial void OnSalaIDChanged();
    partial void OnKapacitetChanging(int value);
    partial void OnKapacitetChanged();
    #endregion
		
		public Sala()
		{
			this._Rezervisan_Termins = new EntitySet<Rezervisan_Termin>(new Action<Rezervisan_Termin>(this.attach_Rezervisan_Termins), new Action<Rezervisan_Termin>(this.detach_Rezervisan_Termins));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalaID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SalaID
		{
			get
			{
				return this._SalaID;
			}
			set
			{
				if ((this._SalaID != value))
				{
					this.OnSalaIDChanging(value);
					this.SendPropertyChanging();
					this._SalaID = value;
					this.SendPropertyChanged("SalaID");
					this.OnSalaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kapacitet", DbType="Int NOT NULL")]
		public int Kapacitet
		{
			get
			{
				return this._Kapacitet;
			}
			set
			{
				if ((this._Kapacitet != value))
				{
					this.OnKapacitetChanging(value);
					this.SendPropertyChanging();
					this._Kapacitet = value;
					this.SendPropertyChanged("Kapacitet");
					this.OnKapacitetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sala_Rezervisan_Termin", Storage="_Rezervisan_Termins", ThisKey="SalaID", OtherKey="SalaID")]
		public EntitySet<Rezervisan_Termin> Rezervisan_Termins
		{
			get
			{
				return this._Rezervisan_Termins;
			}
			set
			{
				this._Rezervisan_Termins.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rezervisan_Termins(Rezervisan_Termin entity)
		{
			this.SendPropertyChanging();
			entity.Sala = this;
		}
		
		private void detach_Rezervisan_Termins(Rezervisan_Termin entity)
		{
			this.SendPropertyChanging();
			entity.Sala = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sistemski_Administrator")]
	public partial class Sistemski_Administrator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ZapsoleniID;
		
		private EntityRef<Zaposleni> _Zaposleni;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnZapsoleniIDChanging(int value);
    partial void OnZapsoleniIDChanged();
    #endregion
		
		public Sistemski_Administrator()
		{
			this._Zaposleni = default(EntityRef<Zaposleni>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZapsoleniID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ZapsoleniID
		{
			get
			{
				return this._ZapsoleniID;
			}
			set
			{
				if ((this._ZapsoleniID != value))
				{
					if (this._Zaposleni.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnZapsoleniIDChanging(value);
					this.SendPropertyChanging();
					this._ZapsoleniID = value;
					this.SendPropertyChanged("ZapsoleniID");
					this.OnZapsoleniIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zaposleni_Sistemski_Administrator", Storage="_Zaposleni", ThisKey="ZapsoleniID", OtherKey="ZaposleniID", IsForeignKey=true)]
		public Zaposleni Zaposleni
		{
			get
			{
				return this._Zaposleni.Entity;
			}
			set
			{
				Zaposleni previousValue = this._Zaposleni.Entity;
				if (((previousValue != value) 
							|| (this._Zaposleni.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Zaposleni.Entity = null;
						previousValue.Sistemski_Administrator = null;
					}
					this._Zaposleni.Entity = value;
					if ((value != null))
					{
						value.Sistemski_Administrator = this;
						this._ZapsoleniID = value.ZaposleniID;
					}
					else
					{
						this._ZapsoleniID = default(int);
					}
					this.SendPropertyChanged("Zaposleni");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Trener")]
	public partial class Trener : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ZaposleniID;
		
		private EntityRef<Zaposleni> _Zaposleni;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnZaposleniIDChanging(int value);
    partial void OnZaposleniIDChanged();
    #endregion
		
		public Trener()
		{
			this._Zaposleni = default(EntityRef<Zaposleni>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZaposleniID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ZaposleniID
		{
			get
			{
				return this._ZaposleniID;
			}
			set
			{
				if ((this._ZaposleniID != value))
				{
					if (this._Zaposleni.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnZaposleniIDChanging(value);
					this.SendPropertyChanging();
					this._ZaposleniID = value;
					this.SendPropertyChanged("ZaposleniID");
					this.OnZaposleniIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zaposleni_Trener", Storage="_Zaposleni", ThisKey="ZaposleniID", OtherKey="ZaposleniID", IsForeignKey=true)]
		public Zaposleni Zaposleni
		{
			get
			{
				return this._Zaposleni.Entity;
			}
			set
			{
				Zaposleni previousValue = this._Zaposleni.Entity;
				if (((previousValue != value) 
							|| (this._Zaposleni.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Zaposleni.Entity = null;
						previousValue.Trener = null;
					}
					this._Zaposleni.Entity = value;
					if ((value != null))
					{
						value.Trener = this;
						this._ZaposleniID = value.ZaposleniID;
					}
					else
					{
						this._ZaposleniID = default(int);
					}
					this.SendPropertyChanged("Zaposleni");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Uplata")]
	public partial class Uplata : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDUsluge;
		
		private int _Cene;
		
		private System.DateTime _Datum;
		
		private long _JMBG;
		
		private int _AktivnostID;
		
		private EntityRef<Aktivnost> _Aktivnost;
		
		private EntityRef<Korisnik> _Korisnik;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDUslugeChanging(int value);
    partial void OnIDUslugeChanged();
    partial void OnCeneChanging(int value);
    partial void OnCeneChanged();
    partial void OnDatumChanging(System.DateTime value);
    partial void OnDatumChanged();
    partial void OnJMBGChanging(long value);
    partial void OnJMBGChanged();
    partial void OnAktivnostIDChanging(int value);
    partial void OnAktivnostIDChanged();
    #endregion
		
		public Uplata()
		{
			this._Aktivnost = default(EntityRef<Aktivnost>);
			this._Korisnik = default(EntityRef<Korisnik>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUsluge", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDUsluge
		{
			get
			{
				return this._IDUsluge;
			}
			set
			{
				if ((this._IDUsluge != value))
				{
					this.OnIDUslugeChanging(value);
					this.SendPropertyChanging();
					this._IDUsluge = value;
					this.SendPropertyChanged("IDUsluge");
					this.OnIDUslugeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cene", DbType="Int NOT NULL")]
		public int Cene
		{
			get
			{
				return this._Cene;
			}
			set
			{
				if ((this._Cene != value))
				{
					this.OnCeneChanging(value);
					this.SendPropertyChanging();
					this._Cene = value;
					this.SendPropertyChanged("Cene");
					this.OnCeneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Datum", DbType="Date NOT NULL")]
		public System.DateTime Datum
		{
			get
			{
				return this._Datum;
			}
			set
			{
				if ((this._Datum != value))
				{
					this.OnDatumChanging(value);
					this.SendPropertyChanging();
					this._Datum = value;
					this.SendPropertyChanged("Datum");
					this.OnDatumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JMBG", DbType="BigInt NOT NULL")]
		public long JMBG
		{
			get
			{
				return this._JMBG;
			}
			set
			{
				if ((this._JMBG != value))
				{
					if (this._Korisnik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJMBGChanging(value);
					this.SendPropertyChanging();
					this._JMBG = value;
					this.SendPropertyChanged("JMBG");
					this.OnJMBGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AktivnostID", DbType="Int NOT NULL")]
		public int AktivnostID
		{
			get
			{
				return this._AktivnostID;
			}
			set
			{
				if ((this._AktivnostID != value))
				{
					if (this._Aktivnost.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAktivnostIDChanging(value);
					this.SendPropertyChanging();
					this._AktivnostID = value;
					this.SendPropertyChanged("AktivnostID");
					this.OnAktivnostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aktivnost_Uplata", Storage="_Aktivnost", ThisKey="AktivnostID", OtherKey="AktivnostID", IsForeignKey=true)]
		public Aktivnost Aktivnost
		{
			get
			{
				return this._Aktivnost.Entity;
			}
			set
			{
				Aktivnost previousValue = this._Aktivnost.Entity;
				if (((previousValue != value) 
							|| (this._Aktivnost.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aktivnost.Entity = null;
						previousValue.Uplatas.Remove(this);
					}
					this._Aktivnost.Entity = value;
					if ((value != null))
					{
						value.Uplatas.Add(this);
						this._AktivnostID = value.AktivnostID;
					}
					else
					{
						this._AktivnostID = default(int);
					}
					this.SendPropertyChanged("Aktivnost");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Korisnik_Uplata", Storage="_Korisnik", ThisKey="JMBG", OtherKey="JMBG", IsForeignKey=true)]
		public Korisnik Korisnik
		{
			get
			{
				return this._Korisnik.Entity;
			}
			set
			{
				Korisnik previousValue = this._Korisnik.Entity;
				if (((previousValue != value) 
							|| (this._Korisnik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Korisnik.Entity = null;
						previousValue.Uplatas.Remove(this);
					}
					this._Korisnik.Entity = value;
					if ((value != null))
					{
						value.Uplatas.Add(this);
						this._JMBG = value.JMBG;
					}
					else
					{
						this._JMBG = default(long);
					}
					this.SendPropertyChanged("Korisnik");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserRole")]
	public partial class UserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserRole1;
		
		private long _UserID;
		
		private int _RoleID;
		
		private EntityRef<Korisnik> _Korisnik;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserRole1Changing(int value);
    partial void OnUserRole1Changed();
    partial void OnUserIDChanging(long value);
    partial void OnUserIDChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    #endregion
		
		public UserRole()
		{
			this._Korisnik = default(EntityRef<Korisnik>);
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="UserRole", Storage="_UserRole1", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserRole1
		{
			get
			{
				return this._UserRole1;
			}
			set
			{
				if ((this._UserRole1 != value))
				{
					this.OnUserRole1Changing(value);
					this.SendPropertyChanging();
					this._UserRole1 = value;
					this.SendPropertyChanged("UserRole1");
					this.OnUserRole1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt NOT NULL")]
		public long UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._Korisnik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Korisnik_UserRole", Storage="_Korisnik", ThisKey="UserID", OtherKey="JMBG", IsForeignKey=true)]
		public Korisnik Korisnik
		{
			get
			{
				return this._Korisnik.Entity;
			}
			set
			{
				Korisnik previousValue = this._Korisnik.Entity;
				if (((previousValue != value) 
							|| (this._Korisnik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Korisnik.Entity = null;
						previousValue.UserRoles.Remove(this);
					}
					this._Korisnik.Entity = value;
					if ((value != null))
					{
						value.UserRoles.Add(this);
						this._UserID = value.JMBG;
					}
					else
					{
						this._UserID = default(long);
					}
					this.SendPropertyChanged("Korisnik");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_UserRole", Storage="_Role", ThisKey="RoleID", OtherKey="RoleID", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.UserRoles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.UserRoles.Add(this);
						this._RoleID = value.RoleID;
					}
					else
					{
						this._RoleID = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ZahtevOprema")]
	public partial class ZahtevOprema : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OpremaID;
		
		private int _Kolicina;
		
		private long _JMBG;
		
		private EntityRef<Korisnik> _Korisnik;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOpremaIDChanging(int value);
    partial void OnOpremaIDChanged();
    partial void OnKolicinaChanging(int value);
    partial void OnKolicinaChanged();
    partial void OnJMBGChanging(long value);
    partial void OnJMBGChanged();
    #endregion
		
		public ZahtevOprema()
		{
			this._Korisnik = default(EntityRef<Korisnik>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpremaID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OpremaID
		{
			get
			{
				return this._OpremaID;
			}
			set
			{
				if ((this._OpremaID != value))
				{
					this.OnOpremaIDChanging(value);
					this.SendPropertyChanging();
					this._OpremaID = value;
					this.SendPropertyChanged("OpremaID");
					this.OnOpremaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kolicina", DbType="Int NOT NULL")]
		public int Kolicina
		{
			get
			{
				return this._Kolicina;
			}
			set
			{
				if ((this._Kolicina != value))
				{
					this.OnKolicinaChanging(value);
					this.SendPropertyChanging();
					this._Kolicina = value;
					this.SendPropertyChanged("Kolicina");
					this.OnKolicinaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JMBG", DbType="BigInt NOT NULL")]
		public long JMBG
		{
			get
			{
				return this._JMBG;
			}
			set
			{
				if ((this._JMBG != value))
				{
					if (this._Korisnik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJMBGChanging(value);
					this.SendPropertyChanging();
					this._JMBG = value;
					this.SendPropertyChanged("JMBG");
					this.OnJMBGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Korisnik_ZahtevOprema", Storage="_Korisnik", ThisKey="JMBG", OtherKey="JMBG", IsForeignKey=true)]
		public Korisnik Korisnik
		{
			get
			{
				return this._Korisnik.Entity;
			}
			set
			{
				Korisnik previousValue = this._Korisnik.Entity;
				if (((previousValue != value) 
							|| (this._Korisnik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Korisnik.Entity = null;
						previousValue.ZahtevOpremas.Remove(this);
					}
					this._Korisnik.Entity = value;
					if ((value != null))
					{
						value.ZahtevOpremas.Add(this);
						this._JMBG = value.JMBG;
					}
					else
					{
						this._JMBG = default(long);
					}
					this.SendPropertyChanged("Korisnik");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Zaposleni")]
	public partial class Zaposleni : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ZaposleniID;
		
		private string _Ime;
		
		private string _Prezime;
		
		private int _DatRodj;
		
		private string _Pozicija;
		
		private EntityRef<Recepcionar> _Recepcionar;
		
		private EntityRef<Sistemski_Administrator> _Sistemski_Administrator;
		
		private EntityRef<Trener> _Trener;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnZaposleniIDChanging(int value);
    partial void OnZaposleniIDChanged();
    partial void OnImeChanging(string value);
    partial void OnImeChanged();
    partial void OnPrezimeChanging(string value);
    partial void OnPrezimeChanged();
    partial void OnDatRodjChanging(int value);
    partial void OnDatRodjChanged();
    partial void OnPozicijaChanging(string value);
    partial void OnPozicijaChanged();
    #endregion
		
		public Zaposleni()
		{
			this._Recepcionar = default(EntityRef<Recepcionar>);
			this._Sistemski_Administrator = default(EntityRef<Sistemski_Administrator>);
			this._Trener = default(EntityRef<Trener>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZaposleniID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ZaposleniID
		{
			get
			{
				return this._ZaposleniID;
			}
			set
			{
				if ((this._ZaposleniID != value))
				{
					this.OnZaposleniIDChanging(value);
					this.SendPropertyChanging();
					this._ZaposleniID = value;
					this.SendPropertyChanged("ZaposleniID");
					this.OnZaposleniIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ime", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ime
		{
			get
			{
				return this._Ime;
			}
			set
			{
				if ((this._Ime != value))
				{
					this.OnImeChanging(value);
					this.SendPropertyChanging();
					this._Ime = value;
					this.SendPropertyChanged("Ime");
					this.OnImeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prezime", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Prezime
		{
			get
			{
				return this._Prezime;
			}
			set
			{
				if ((this._Prezime != value))
				{
					this.OnPrezimeChanging(value);
					this.SendPropertyChanging();
					this._Prezime = value;
					this.SendPropertyChanged("Prezime");
					this.OnPrezimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatRodj", DbType="Int NOT NULL")]
		public int DatRodj
		{
			get
			{
				return this._DatRodj;
			}
			set
			{
				if ((this._DatRodj != value))
				{
					this.OnDatRodjChanging(value);
					this.SendPropertyChanging();
					this._DatRodj = value;
					this.SendPropertyChanged("DatRodj");
					this.OnDatRodjChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pozicija", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Pozicija
		{
			get
			{
				return this._Pozicija;
			}
			set
			{
				if ((this._Pozicija != value))
				{
					this.OnPozicijaChanging(value);
					this.SendPropertyChanging();
					this._Pozicija = value;
					this.SendPropertyChanged("Pozicija");
					this.OnPozicijaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zaposleni_Recepcionar", Storage="_Recepcionar", ThisKey="ZaposleniID", OtherKey="ZaposleniID", IsUnique=true, IsForeignKey=false)]
		public Recepcionar Recepcionar
		{
			get
			{
				return this._Recepcionar.Entity;
			}
			set
			{
				Recepcionar previousValue = this._Recepcionar.Entity;
				if (((previousValue != value) 
							|| (this._Recepcionar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Recepcionar.Entity = null;
						previousValue.Zaposleni = null;
					}
					this._Recepcionar.Entity = value;
					if ((value != null))
					{
						value.Zaposleni = this;
					}
					this.SendPropertyChanged("Recepcionar");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zaposleni_Sistemski_Administrator", Storage="_Sistemski_Administrator", ThisKey="ZaposleniID", OtherKey="ZapsoleniID", IsUnique=true, IsForeignKey=false)]
		public Sistemski_Administrator Sistemski_Administrator
		{
			get
			{
				return this._Sistemski_Administrator.Entity;
			}
			set
			{
				Sistemski_Administrator previousValue = this._Sistemski_Administrator.Entity;
				if (((previousValue != value) 
							|| (this._Sistemski_Administrator.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sistemski_Administrator.Entity = null;
						previousValue.Zaposleni = null;
					}
					this._Sistemski_Administrator.Entity = value;
					if ((value != null))
					{
						value.Zaposleni = this;
					}
					this.SendPropertyChanged("Sistemski_Administrator");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zaposleni_Trener", Storage="_Trener", ThisKey="ZaposleniID", OtherKey="ZaposleniID", IsUnique=true, IsForeignKey=false)]
		public Trener Trener
		{
			get
			{
				return this._Trener.Entity;
			}
			set
			{
				Trener previousValue = this._Trener.Entity;
				if (((previousValue != value) 
							|| (this._Trener.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Trener.Entity = null;
						previousValue.Zaposleni = null;
					}
					this._Trener.Entity = value;
					if ((value != null))
					{
						value.Zaposleni = this;
					}
					this.SendPropertyChanged("Trener");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
